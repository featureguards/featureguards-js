// @generated by protobuf-ts 2.6.0 with parameter optimize_code_size
// @generated from protobuf file "shared/feature_toggle.proto" (package "feature_toggle", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { User } from "./user";
import { Timestamp } from "../google/protobuf/timestamp";
/**
 * @generated from protobuf message feature_toggle.FeatureToggleHistory
 */
export interface FeatureToggleHistory {
    /**
     * @generated from protobuf field: repeated feature_toggle.FeatureToggle history = 1;
     */
    history: FeatureToggle[];
}
/**
 * @generated from protobuf message feature_toggle.Platform
 */
export interface Platform {
}
/**
 * @generated from protobuf enum feature_toggle.Platform.Type
 */
export enum Platform_Type {
    /**
     * @generated from protobuf enum value: DEFAULT = 0;
     */
    DEFAULT = 0,
    /**
     * @generated from protobuf enum value: WEB = 1;
     */
    WEB = 1,
    /**
     * @generated from protobuf enum value: MOBILE = 2;
     */
    MOBILE = 2
}
/**
 * @generated from protobuf message feature_toggle.FeatureToggle
 */
export interface FeatureToggle {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string; // Read-only
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: feature_toggle.FeatureToggle.Type toggle_type = 3;
     */
    toggleType: FeatureToggle_Type; // Set once.
    /**
     * @generated from protobuf field: int64 version = 4;
     */
    version: bigint; // Read-only.
    /**
     * @generated from protobuf field: bool enabled = 5;
     */
    enabled: boolean;
    /**
     * @generated from protobuf field: string description = 6;
     */
    description: string;
    /**
     * @generated from protobuf field: repeated feature_toggle.Platform.Type platforms = 7;
     */
    platforms: Platform_Type[];
    /**
     * @generated from protobuf field: google.protobuf.Timestamp created_at = 8;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp updated_at = 9;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp deleted_at = 10;
     */
    deletedAt?: Timestamp;
    /**
     * @generated from protobuf field: string project_id = 11;
     */
    projectId: string;
    /**
     * @generated from protobuf field: user.User created_by = 12;
     */
    createdBy?: User;
    /**
     * @generated from protobuf field: user.User updated_by = 13;
     */
    updatedBy?: User;
    /**
     * @generated from protobuf oneof: FeatureDefinition
     */
    featureDefinition: {
        oneofKind: "onOff";
        /**
         * @generated from protobuf field: feature_toggle.OnOffFeature on_off = 20;
         */
        onOff: OnOffFeature;
    } | {
        oneofKind: "percentage";
        /**
         * @generated from protobuf field: feature_toggle.PercentageFeature percentage = 21;
         */
        percentage: PercentageFeature;
    } | {
        oneofKind: "permission";
        /**
         * @generated from protobuf field: feature_toggle.PermissionFeature permission = 22;
         */
        permission: PermissionFeature;
    } | {
        oneofKind: "experiment";
        /**
         * @generated from protobuf field: feature_toggle.ExperimentFeature experiment = 23;
         */
        experiment: ExperimentFeature;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf enum feature_toggle.FeatureToggle.Type
 */
export enum FeatureToggle_Type {
    /**
     * @generated from protobuf enum value: ON_OFF = 0;
     */
    ON_OFF = 0,
    /**
     * @generated from protobuf enum value: PERCENTAGE = 1;
     */
    PERCENTAGE = 1,
    /**
     * Fail if can't confirm. Must be used by server-side code only.
     *
     * @generated from protobuf enum value: PERMISSION = 2;
     */
    PERMISSION = 2,
    /**
     * MultiVariant.
     *
     * @generated from protobuf enum value: EXPERIMENT = 3;
     */
    EXPERIMENT = 3
}
/**
 * @generated from protobuf message feature_toggle.StringOp
 */
export interface StringOp {
    /**
     * @generated from protobuf field: feature_toggle.StringOp.Operator op = 1;
     */
    op: StringOp_Operator;
    /**
     * @generated from protobuf field: repeated string values = 2;
     */
    values: string[];
}
/**
 * @generated from protobuf enum feature_toggle.StringOp.Operator
 */
export enum StringOp_Operator {
    /**
     * @generated from protobuf enum value: EQ = 0;
     */
    EQ = 0,
    /**
     * @generated from protobuf enum value: CONTAINS = 1;
     */
    CONTAINS = 1,
    /**
     * TODO: Regex
     *
     * @generated from protobuf enum value: IN = 2;
     */
    IN = 2
}
/**
 * @generated from protobuf message feature_toggle.BoolOp
 */
export interface BoolOp {
    /**
     * @generated from protobuf field: bool value = 1;
     */
    value: boolean;
}
/**
 * @generated from protobuf message feature_toggle.FloatOp
 */
export interface FloatOp {
    /**
     * @generated from protobuf field: feature_toggle.FloatOp.Operator op = 1;
     */
    op: FloatOp_Operator;
    /**
     * @generated from protobuf field: repeated float values = 2;
     */
    values: number[];
}
/**
 * @generated from protobuf enum feature_toggle.FloatOp.Operator
 */
export enum FloatOp_Operator {
    /**
     * @generated from protobuf enum value: EQ = 0;
     */
    EQ = 0,
    /**
     * @generated from protobuf enum value: GT = 1;
     */
    GT = 1,
    /**
     * @generated from protobuf enum value: LT = 2;
     */
    LT = 2,
    /**
     * @generated from protobuf enum value: GTE = 3;
     */
    GTE = 3,
    /**
     * @generated from protobuf enum value: LTE = 4;
     */
    LTE = 4,
    /**
     * @generated from protobuf enum value: NEQ = 5;
     */
    NEQ = 5,
    /**
     * @generated from protobuf enum value: IN = 6;
     */
    IN = 6
}
/**
 * @generated from protobuf message feature_toggle.IntOp
 */
export interface IntOp {
    /**
     * @generated from protobuf field: feature_toggle.IntOp.Operator op = 1;
     */
    op: IntOp_Operator;
    /**
     * @generated from protobuf field: repeated int64 values = 2;
     */
    values: bigint[];
}
/**
 * @generated from protobuf enum feature_toggle.IntOp.Operator
 */
export enum IntOp_Operator {
    /**
     * @generated from protobuf enum value: EQ = 0;
     */
    EQ = 0,
    /**
     * @generated from protobuf enum value: GT = 1;
     */
    GT = 1,
    /**
     * @generated from protobuf enum value: LT = 2;
     */
    LT = 2,
    /**
     * @generated from protobuf enum value: GTE = 3;
     */
    GTE = 3,
    /**
     * @generated from protobuf enum value: LTE = 4;
     */
    LTE = 4,
    /**
     * @generated from protobuf enum value: NEQ = 5;
     */
    NEQ = 5,
    /**
     * @generated from protobuf enum value: IN = 6;
     */
    IN = 6
}
/**
 * @generated from protobuf message feature_toggle.DateTimeOp
 */
export interface DateTimeOp {
    /**
     * @generated from protobuf field: feature_toggle.DateTimeOp.Operator op = 1;
     */
    op: DateTimeOp_Operator;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp timestamp = 2;
     */
    timestamp?: Timestamp;
}
/**
 * @generated from protobuf enum feature_toggle.DateTimeOp.Operator
 */
export enum DateTimeOp_Operator {
    /**
     * @generated from protobuf enum value: BEFORE = 0;
     */
    BEFORE = 0,
    /**
     * @generated from protobuf enum value: AFTER = 1;
     */
    AFTER = 1
}
/**
 * @generated from protobuf message feature_toggle.Key
 */
export interface Key {
    /**
     * @generated from protobuf field: string key = 1;
     */
    key: string;
    /**
     * @generated from protobuf field: feature_toggle.Key.Type key_type = 2;
     */
    keyType: Key_Type;
}
/**
 * @generated from protobuf enum feature_toggle.Key.Type
 */
export enum Key_Type {
    /**
     * @generated from protobuf enum value: STRING = 0;
     */
    STRING = 0,
    /**
     * @generated from protobuf enum value: BOOLEAN = 1;
     */
    BOOLEAN = 1,
    /**
     * @generated from protobuf enum value: FLOAT = 2;
     */
    FLOAT = 2,
    /**
     * @generated from protobuf enum value: INT = 3;
     */
    INT = 3,
    /**
     * @generated from protobuf enum value: DATE_TIME = 4;
     */
    DATE_TIME = 4
}
/**
 * @generated from protobuf message feature_toggle.Match
 */
export interface Match {
    /**
     * @generated from protobuf field: feature_toggle.Key key = 1;
     */
    key?: Key;
    /**
     * @generated from protobuf oneof: Operation
     */
    operation: {
        oneofKind: "stringOp";
        /**
         * @generated from protobuf field: feature_toggle.StringOp string_op = 10;
         */
        stringOp: StringOp;
    } | {
        oneofKind: "boolOp";
        /**
         * @generated from protobuf field: feature_toggle.BoolOp bool_op = 11;
         */
        boolOp: BoolOp;
    } | {
        oneofKind: "floatOp";
        /**
         * @generated from protobuf field: feature_toggle.FloatOp float_op = 12;
         */
        floatOp: FloatOp;
    } | {
        oneofKind: "intOp";
        /**
         * @generated from protobuf field: feature_toggle.IntOp int_op = 13;
         */
        intOp: IntOp;
    } | {
        oneofKind: "dateTimeOp";
        /**
         * @generated from protobuf field: feature_toggle.DateTimeOp date_time_op = 14;
         */
        dateTimeOp: DateTimeOp;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message feature_toggle.Variant
 */
export interface Variant {
    /**
     * @generated from protobuf field: repeated feature_toggle.Match matches = 1;
     */
    matches: Match[];
    /**
     * @generated from protobuf field: float weight = 2;
     */
    weight: number;
}
/**
 * @generated from protobuf message feature_toggle.OnOffFeature
 */
export interface OnOffFeature {
    /**
     * @generated from protobuf field: feature_toggle.Variant on = 1;
     */
    on?: Variant;
    /**
     * @generated from protobuf field: feature_toggle.Variant off = 2;
     */
    off?: Variant;
}
/**
 * @generated from protobuf message feature_toggle.Stickiness
 */
export interface Stickiness {
    /**
     * @generated from protobuf field: feature_toggle.Stickiness.Type stickiness_type = 1;
     */
    stickinessType: Stickiness_Type;
    /**
     * @generated from protobuf field: repeated feature_toggle.Key keys = 2;
     */
    keys: Key[];
}
/**
 * @generated from protobuf enum feature_toggle.Stickiness.Type
 */
export enum Stickiness_Type {
    /**
     * @generated from protobuf enum value: RANDOM = 0;
     */
    RANDOM = 0,
    /**
     * @generated from protobuf enum value: KEYS = 1;
     */
    KEYS = 1
}
/**
 * @generated from protobuf message feature_toggle.PercentageFeature
 */
export interface PercentageFeature {
    /**
     * @generated from protobuf field: string salt = 1;
     */
    salt: string;
    /**
     * @generated from protobuf field: feature_toggle.Variant on = 2;
     */
    on?: Variant;
    /**
     * @generated from protobuf field: feature_toggle.Variant off = 3;
     */
    off?: Variant;
    /**
     * @generated from protobuf field: feature_toggle.Stickiness stickiness = 4;
     */
    stickiness?: Stickiness;
}
/**
 * @generated from protobuf message feature_toggle.PermissionFeature
 */
export interface PermissionFeature {
    /**
     * @generated from protobuf field: string salt = 1;
     */
    salt: string;
    /**
     * @generated from protobuf field: feature_toggle.Variant on = 2;
     */
    on?: Variant;
    /**
     * @generated from protobuf field: feature_toggle.Variant off = 3;
     */
    off?: Variant;
}
/**
 * @generated from protobuf message feature_toggle.ExperimentFeature
 */
export interface ExperimentFeature {
    /**
     * @generated from protobuf field: string salt = 1;
     */
    salt: string;
    /**
     * @generated from protobuf field: repeated feature_toggle.Variant variants = 2;
     */
    variants: Variant[];
}
// @generated message type with reflection information, may provide speed optimized methods
class FeatureToggleHistory$Type extends MessageType<FeatureToggleHistory> {
    constructor() {
        super("feature_toggle.FeatureToggleHistory", [
            { no: 1, name: "history", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FeatureToggle }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.FeatureToggleHistory
 */
export const FeatureToggleHistory = new FeatureToggleHistory$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Platform$Type extends MessageType<Platform> {
    constructor() {
        super("feature_toggle.Platform", []);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.Platform
 */
export const Platform = new Platform$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FeatureToggle$Type extends MessageType<FeatureToggle> {
    constructor() {
        super("feature_toggle.FeatureToggle", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "toggle_type", kind: "enum", T: () => ["feature_toggle.FeatureToggle.Type", FeatureToggle_Type] },
            { no: 4, name: "version", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "enabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "platforms", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["feature_toggle.Platform.Type", Platform_Type] },
            { no: 8, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 9, name: "updated_at", kind: "message", T: () => Timestamp },
            { no: 10, name: "deleted_at", kind: "message", T: () => Timestamp },
            { no: 11, name: "project_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "created_by", kind: "message", T: () => User },
            { no: 13, name: "updated_by", kind: "message", T: () => User },
            { no: 20, name: "on_off", kind: "message", oneof: "featureDefinition", T: () => OnOffFeature },
            { no: 21, name: "percentage", kind: "message", oneof: "featureDefinition", T: () => PercentageFeature },
            { no: 22, name: "permission", kind: "message", oneof: "featureDefinition", T: () => PermissionFeature },
            { no: 23, name: "experiment", kind: "message", oneof: "featureDefinition", T: () => ExperimentFeature }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.FeatureToggle
 */
export const FeatureToggle = new FeatureToggle$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StringOp$Type extends MessageType<StringOp> {
    constructor() {
        super("feature_toggle.StringOp", [
            { no: 1, name: "op", kind: "enum", T: () => ["feature_toggle.StringOp.Operator", StringOp_Operator] },
            { no: 2, name: "values", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.StringOp
 */
export const StringOp = new StringOp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BoolOp$Type extends MessageType<BoolOp> {
    constructor() {
        super("feature_toggle.BoolOp", [
            { no: 1, name: "value", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.BoolOp
 */
export const BoolOp = new BoolOp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FloatOp$Type extends MessageType<FloatOp> {
    constructor() {
        super("feature_toggle.FloatOp", [
            { no: 1, name: "op", kind: "enum", T: () => ["feature_toggle.FloatOp.Operator", FloatOp_Operator] },
            { no: 2, name: "values", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.FloatOp
 */
export const FloatOp = new FloatOp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IntOp$Type extends MessageType<IntOp> {
    constructor() {
        super("feature_toggle.IntOp", [
            { no: 1, name: "op", kind: "enum", T: () => ["feature_toggle.IntOp.Operator", IntOp_Operator] },
            { no: 2, name: "values", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.IntOp
 */
export const IntOp = new IntOp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DateTimeOp$Type extends MessageType<DateTimeOp> {
    constructor() {
        super("feature_toggle.DateTimeOp", [
            { no: 1, name: "op", kind: "enum", T: () => ["feature_toggle.DateTimeOp.Operator", DateTimeOp_Operator] },
            { no: 2, name: "timestamp", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.DateTimeOp
 */
export const DateTimeOp = new DateTimeOp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Key$Type extends MessageType<Key> {
    constructor() {
        super("feature_toggle.Key", [
            { no: 1, name: "key", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "key_type", kind: "enum", T: () => ["feature_toggle.Key.Type", Key_Type] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.Key
 */
export const Key = new Key$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Match$Type extends MessageType<Match> {
    constructor() {
        super("feature_toggle.Match", [
            { no: 1, name: "key", kind: "message", T: () => Key },
            { no: 10, name: "string_op", kind: "message", oneof: "operation", T: () => StringOp },
            { no: 11, name: "bool_op", kind: "message", oneof: "operation", T: () => BoolOp },
            { no: 12, name: "float_op", kind: "message", oneof: "operation", T: () => FloatOp },
            { no: 13, name: "int_op", kind: "message", oneof: "operation", T: () => IntOp },
            { no: 14, name: "date_time_op", kind: "message", oneof: "operation", T: () => DateTimeOp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.Match
 */
export const Match = new Match$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Variant$Type extends MessageType<Variant> {
    constructor() {
        super("feature_toggle.Variant", [
            { no: 1, name: "matches", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Match },
            { no: 2, name: "weight", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.Variant
 */
export const Variant = new Variant$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OnOffFeature$Type extends MessageType<OnOffFeature> {
    constructor() {
        super("feature_toggle.OnOffFeature", [
            { no: 1, name: "on", kind: "message", T: () => Variant },
            { no: 2, name: "off", kind: "message", T: () => Variant }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.OnOffFeature
 */
export const OnOffFeature = new OnOffFeature$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Stickiness$Type extends MessageType<Stickiness> {
    constructor() {
        super("feature_toggle.Stickiness", [
            { no: 1, name: "stickiness_type", kind: "enum", T: () => ["feature_toggle.Stickiness.Type", Stickiness_Type] },
            { no: 2, name: "keys", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Key }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.Stickiness
 */
export const Stickiness = new Stickiness$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PercentageFeature$Type extends MessageType<PercentageFeature> {
    constructor() {
        super("feature_toggle.PercentageFeature", [
            { no: 1, name: "salt", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "on", kind: "message", T: () => Variant },
            { no: 3, name: "off", kind: "message", T: () => Variant },
            { no: 4, name: "stickiness", kind: "message", T: () => Stickiness }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.PercentageFeature
 */
export const PercentageFeature = new PercentageFeature$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PermissionFeature$Type extends MessageType<PermissionFeature> {
    constructor() {
        super("feature_toggle.PermissionFeature", [
            { no: 1, name: "salt", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "on", kind: "message", T: () => Variant },
            { no: 3, name: "off", kind: "message", T: () => Variant }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.PermissionFeature
 */
export const PermissionFeature = new PermissionFeature$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExperimentFeature$Type extends MessageType<ExperimentFeature> {
    constructor() {
        super("feature_toggle.ExperimentFeature", [
            { no: 1, name: "salt", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "variants", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Variant }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message feature_toggle.ExperimentFeature
 */
export const ExperimentFeature = new ExperimentFeature$Type();
